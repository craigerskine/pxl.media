---
layout: 'layouts/default.njk'
title: Search results
---

{%- import 'components/heading.njk' as heading %}

<div x-data="appdata">
  {%- call heading.x(tag='h1') %}<span x-html="' &quot;'+ query +'&quot;'"></span> {{ title }}{%- endcall %}
  <ul x-show="results" class="px-4 divide-(y gray-400/30)">
    <template x-for="item in getItems" hidden>
      <li class="game py-6 flex-(& col) items-center gap-4 md:(flex-row gap-10)">
        <figure class="flex-none">
          <img :src="'/_assets/img/games/'+ slugify(item.title) +'.jpg'" :alt="item.title +' cover'" class="cover w-24 h-auto rounded shadow-lg" />
          <figcaption class="sr-only" x-text="item.title"></figcaption>
        </figure>
        <div class="text-center md:(text-start)">
          <p class="text-(base gray-100) font-bold md:(text-2xl)" x-text="item.title"></p>
          <ul class="text-sm space-y-3">
            <li class="platform text-base" x-text="item.platform"></li>
            <li class="genre flex-(& wrap) gap-3">
              <template x-for="(g, index) in item.genre" hidden>
                <span>
                  <span class="genre" x-text="g"></span>
                  <span x-text="((index + 1) < item.genre.length) ? ',' : ''"></span>
                </span>
              </template>
            </li>
            <template x-if="item.note" hidden>
              <li class="note text-xs inline-flex items-center gap-1">
                <iconify-icon icon="mdi:note" width="1em" height="1em" inline="false" class="iconify text-lg opacity-50"></iconify-icon>
                <i x-text="item.note"></i>
              </li>
            </template>
          </ul>
        </div>
      </li>
    </template>
  </ul>
  <h2 x-show="!results" class="m-auto py-8 px-4 text-(gray-500 3xl center) leading-none font-bold md:(py-32)">
    NO RESULTS
    <small class="pt-5 text-lg block opacity-80 md:(text-2xl)">↑ ↑ ↓ ↓ ← → ← → B A</small>
  </h2>
</div>

<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('appdata', () => ({
      query: new URLSearchParams(location.search).get('q'),
      results: false,
      get getItems() {
        const filterItems = this.games.filter((item) => {
          const qy = this.query.toString().toLowerCase().replace(/[^\w\-]+/g, '') ?? ''
          const tl = item.title.toString().normalize('NFKD').toLowerCase().replace(/[^\w\-]+/g, '') ?? ''
          const nt = item.note.toString().toLowerCase().replace(/[^\w\-]+/g, '') ?? ''
          const arr = [tl, nt]
          return arr.some(rs => rs.includes(qy))
        })
        if(filterItems.length < this.games.length && filterItems.length > 0) {
          this.results = true
          return filterItems
        } else {
          this.results = false
        }
      },
      slugify(text) {
        return text.toString()
          .toLowerCase()
          .trim()
          .replace(/\s+/g, '-')
          .replace('&', '-and-')
          .normalize('NFKD')
          .replace(/[^\w\-]+/g, '')
          .replace(/\-\-+/g, '-')
          .replace(/^-+/, '')
          .replace(/-+$/, '')
      },
      games: [{%- for item in collections.game | sort(false, false, "data.title") -%}
        {
          title: "{{ item.data.title | safe }}",
          note: "{{ item.data.note | safe }}",
          genre: [
            {%- for g in item.data.tags -%}
              {%- if g.includes('genre_') -%}
                "{{ g | replace('genre_', '') | replace('-', ' ') | title | replace('Rpg', 'RPG') | replace('Playstation', 'PlayStation') }}",
              {%- endif -%}
            {%- endfor -%}
          ],
          platform: "
            {%- for t in item.data.tags -%}
              {%- if t.includes('platform_') -%}
                {{ t | replace('platform_', '') | replace('-', ' ') | title | replace('ds', 'DS') | replace('Ds', 'DS') | replace('Playstation', 'PlayStation') }}
              {%- endif -%}
            {%- endfor -%}
          "
        },
      {%- endfor -%}],
    }));
  })
</script>
---
layout: 'layouts/default.njk'
title: Search results
---

{%- import 'components/heading.njk' as heading %}

<div x-data="appdata" x-init="gamesFiltered">
  {%- call heading.x(tag='h1') %}<b x-show="results" x-text="total" class="mr-2 text-xs opacity-75"></b> <span x-html="' &quot;'+ query +'&quot;'"></span> {{ title }}{%- endcall %}
  <ul x-show="results" class="px-4 grid-(& cols-1) lg:(grid-cols-2 gap-x-12)">
    <template x-for="item in gamesFiltered" hidden>
      <li class="game py-6 flex-(& col) items-center gap-4 md:(flex-row gap-10)">
        <div class="box w-full flex relative overflow-hidden rounded-lg shadow-xl">
          <img :src="'/_assets/img/games/'+ slugify(item.title) +'.jpg'" :alt="item.title" class="w-24 h-full opacity-50" />
          <div class="details w-full min-w-0 flex">
            <div class="meta p-3 pb-0 w-full min-w-0 flex-(& 1 col) justify-between motion-safe:(transition-all)">
              <div class="mast mb-2 flex-1">
                <b class="name text-white truncate block text-base font-black" :title="item.title" x-text="item.title"></b>
                <template x-if="item.note" hidden>
                  <p class="note text-xs inline-flex items-center gap-1">
                    <i x-text="item.note"></i>
                  </p>
                </template>
              </div>
              <ul class="pb-2 w-full text-sm flex items-center divide-(x dashed gray-500/30)">
                <li  class="pr-2" x-text="item.platform"></li>
                <li class="pl-2">
                  <ul class="genre flex-(& wrap) space-x-1">
                    <template x-for="(g, index) in item.genre" hidden>
                      <li x-text="g +((index + 1) < item.genre.length ? ', ' : '')"></li>
                    </template>
                  </ul>
                </li>
              </ul>
              <ul class="border-(t dashed gray-500/30) py-2 flex items-center justify-end gap-x-1">
                <li x-show="item.physical"><iconify-icon icon="mdi:chip" inline="false" class="text-xl opacity-50" title="Physical"></iconify-icon></li>
                <li x-show="item.digital"><iconify-icon icon="mdi:qrcode" inline="false" class="text-xl opacity-50" title="Digital"></iconify-icon></li>
              </ul>
            </div>
          </div>
        </div>
      </li>
    </template>
  </ul>
  <h2 x-show="!results" class="m-auto py-8 px-4 text-(gray-500 3xl center) leading-none font-bold md:(py-32)">
    NO RESULTS
    <small class="pt-5 text-lg block opacity-80 md:(text-2xl)">↑ ↑ ↓ ↓ ← → ← → B A</small>
  </h2>
</div>

<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('appdata', () => ({
      query: new URLSearchParams(location.search).get('q'),
      games: null,
      results: false,
      total: 0,
      async gamesFiltered() {
        if (this.games === null) {
          try {
            const response = await fetch('/search/data.json');
            const data = await response.json();
            this.games = data;
          } catch (error) {
            console.error('Error loading JSON data:', error);
          }
        }
        if (this.games) {
          const filterItems = this.games.filter((item) => {
            const qy = this.query.toString().toLowerCase().replace(/[^\w\-]+/g, '') ?? '';
            const tl = item.title.toString().normalize('NFKD').toLowerCase().replace(/[^\w\-]+/g, '') ?? '';
            const nt = item.note.toString().toLowerCase().replace(/[^\w\-]+/g, '') ?? '';
            const arr = [tl, nt];
            return arr.some(rs => rs.includes(qy));
          });
          if (filterItems.length < this.games.length && filterItems.length > 0) {
            this.total = filterItems.length;
            this.results = true;
            return filterItems;
          } else {
            this.results = false;
          }
        }
        return null;
      },
      slugify(text) {
        return text.toString()
          .toLowerCase()
          .trim()
          .replace(/\s+/g, '-')
          .replace('&', '-and-')
          .normalize('NFKD')
          .replace(/[^\w\-]+/g, '')
          .replace(/\-\-+/g, '-')
          .replace(/^-+/, '')
          .replace(/-+$/, '');
      },
    }));
  });
</script>